---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by brendanwang.
--- DateTime: 2024/8/6 14:53
---

---@class Ability_Task_ConfigureSwitchWeapon   配置卸载方式
local Ability_Task_ConfigureSwitchWeapon = UE4.Class(nil, "Ability_Task_ConfigureSwitchWeapon")
local SPGameDefine = require("Feature.StarP.Script.System.SPGameDefine");
local CharInventory = require("Feature.StarP.Script.System.Comp.FriendSkill.SPGameFriendSkillComponent");
local State = nil
local FrienSkillLogic = require("Feature.StarP.Script.System.Weapon.Range.SPFriendSkillEnergyLogic")
function Ability_Task_ConfigureSwitchWeapon:OnTaskStartBP(Context)
    _SP.Log("SPAbilityTask","Ability_Task_ConfigureSwitchWeapon:OnTaskStartBP")
    if not self.IsForceUnload then
        if self.IsAnimFinish then
            --SPPVPRecano 设置伙伴武器在动画播放完毕后并且没有打开强制卸载开关的情况下的方式
            local UnloadType = SPGameDefine.UnloadType.AnimFinish
            local UnForceType = SPGameDefine.UnloadType.UnForceUnload
            --local InventoryComp = Character:SafeGetInventoryComponent()
            CharInventory:SetAnimtype(UnloadType)
            CharInventory:SetForcetype(UnForceType)
            FrienSkillLogic:SetLocalForceState(UnloadType,UnForceType)
        else
            --SPPVPRecano 设置伙伴武器在动画播放进行中时并且没有打开强制卸载开关的情况下的方式
            local UnloadTypeTwo = SPGameDefine.UnloadType.AnimPlaying
            local UnForceType = SPGameDefine.UnloadType.UnForceUnload
            FrienSkillLogic:SetLocalForceState(UnloadTypeTwo,UnForceType)
           CharInventory:SetAnimtype(UnloadTypeTwo)
           CharInventory:SetForcetype(UnForceType)
        end
    elseif self.IsForceUnload then
        if self.IsAnimFinish then
            --SPPVPRecano 设置伙伴武器在动画播放进行中时并且没有打开强制卸载开关的情况下的方式
            local UnloadType = SPGameDefine.UnloadType.AnimFinish
            local ForceType = SPGameDefine.UnloadType.ForceUnload
            --local InventoryComp = Character:SafeGetInventoryComponent()
            CharInventory:SetAnimtype(UnloadType)
            CharInventory:SetForcetype(ForceType)
            FrienSkillLogic:SetLocalForceState(UnloadType,ForceType)
        elseif not self.IsAnimFinish then
            local UnloadType = SPGameDefine.UnloadType.AnimPlaying
            local ForceType = SPGameDefine.UnloadType.ForceUnload
            FrienSkillLogic:SetLocalForceState(UnloadType,ForceType)
            CharInventory:SetAnimtype(UnloadType)
            CharInventory:SetForcetype(ForceType)
        end
    end
end

function Ability_Task_ConfigureSwitchWeapon:OnTaskTickBP(Context)

end

function Ability_Task_ConfigureSwitchWeapon:OnTaskEndBP(Context)
    if self.IsForceUnload then
        local UnloadType = SPGameDefine.UnloadType.AnimFinish
        local ForceType = SPGameDefine.UnloadType.ForceUnload
        --local InventoryComp = Character:SafeGetInventoryComponent()
        CharInventory:SetAnimtype(UnloadType)
        CharInventory:SetForcetype(ForceType)
        FrienSkillLogic:SetLocalForceState(UnloadType,ForceType)
    elseif not self.IsForceUnload  then
        local UnloadType = SPGameDefine.UnloadType.AnimFinish
        local ForceType = SPGameDefine.UnloadType.UnForceUnload
        --local InventoryComp = Character:SafeGetInventoryComponent()
        CharInventory:SetAnimtype(UnloadType)
        CharInventory:SetForcetype(ForceType)
        FrienSkillLogic:SetLocalForceState(UnloadType,ForceType)
    end
end

return Ability_Task_ConfigureSwitchWeapon