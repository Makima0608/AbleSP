---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by bladeyuan.
--- DateTime: 2024/4/26 15:13
---
local SPAbility = require("Feature.StarP.Script.System.Ability.SPAbilityClasses")
local SPAbilityUtils = require("Feature.StarP.Script.System.Ability.SPAbilityUtils")
local Ability_Task_PlayerCameraAdjust = UE4.Class(nil, "Ability_Task_PlayerCameraAdjust")
local S_UE4 = UE4
local S_UnifiedNetworkLib = S_UE4.USPUnifiedNetworkLibrary
local S_IsRelatedToLocalController = S_UnifiedNetworkLib.IsRelatedToLocalController

function Ability_Task_PlayerCameraAdjust:OnTaskStartBP(Context)
    -- Get ScratchPad

    --如果_SP已经被销毁则直接退出函数
    if not _SP then
        return
    end

    if not _SP or not _SP.IsClient then
        _SP.LogWarning("SPAbilityTask", "Ability_Task_PlayerCameraAdjust:Is Not Client")
        return
    end

    local OwnerActor = Context:GetOwner()
    if OwnerActor == nil then
        _SP.LogWarning("SPAbilityTask", "Ability_Task_PlayerCameraAdjust:task owner is nil")
        return
    end
    if not S_IsRelatedToLocalController(OwnerActor, false) then
        _SP.LogWarning("SPAbilityTask", "Ability_Task_PlayerCameraAdjust:task owner not local controlled")
        return
    end




    local ScratchPad = self:GetScratchPad(Context)
    if ScratchPad then
        ScratchPad.LogText = self.LogText
        print("Ability_Task_PlayerCameraAdjust:OnTaskStartBP !!!", self.LogText)
    end

    -- Get Target
    local Target = self:GetSingleActorFromTargetTypeBP(Context, UE4.EAbleAbilityTargetType.ATT_Self)
    -- or
    --[[
    local TargetArray = UE4.TArray(UE4.AActor)
    self:GetActorsForTaskBP(Context, TargetArray)
    local Target = TargetArray:Num() > 0 and TargetArray:Get(1) or nil
    ]]

    local sockoffset = self.ModifierSetting.targetParam.targetSocketOffset.Z

	if self.bOverrideModifier then
		UE4.USPGameCameraUtils.AddModifierStateBySkillTask(self.ModifierSetting)
    end
	if self.bOverrideLagSetting then
		UE4.USPGameCameraUtils.AddLagStateBySkillTask(self.LagSetting)
    end
	if self.bOverrideModifier or self.bOverrideLagSetting then
		UE4.USPGameCameraUtils.TryEnterSkillTaskState()
    end
end

function Ability_Task_PlayerCameraAdjust:OnTaskEndBP(Context)
    if self.bResetInStop and (self.bOverrideModifier or self.bOverrideLagSetting) then
		UE4.USPGameCameraUtils:TryLeaveSkillTaskState()
    end

    local ScratchPad = self:GetScratchPad(Context)
    if ScratchPad then
        print("Ability_Task_PlayerCameraAdjust:OnTaskEndBP !!!", ScratchPad.LogText)
    end
end

function Ability_Task_PlayerCameraAdjust:IsSingleFrameBP()
    return false
end

function Ability_Task_PlayerCameraAdjust:GetTaskScratchPadClassBP(Context)
    return SPAbilityUtils.LoadScratchPadClass(SPAbility.ScratchPadClass.PlayerCameraAdjustPad)
end

return Ability_Task_PlayerCameraAdjust