---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hangtian.
--- DateTime: 2024/6/18 下午5:27
---

local function ErrLog(...)
    _SP.LogError("SPAbility", "Ability_Task_AdjustedPosition", ...)
end

local function Log(...)
    _SP.Log("SPAbility", "Ability_Task_AdjustedPosition", ...)
end
local SPGameplayUtils = require("Feature.StarP.Script.System.SPGameplayUtils")

---@class Ability_Task_AdjustedPosition
---@field AreaRadius number
local Ability_Task_AdjustedPosition = UE4.Class(nil, "Ability_Task_AdjustedPosition")

---@param Context UAblAbilityContext
function Ability_Task_AdjustedPosition:OnTaskStartBP(Context)
    Log("OnTaskStartBP")
    local ownerActor = Context:GetOwner()
    if ownerActor == nil then
        return
    end
    local targetActors = Context:GetTargetActors()
    local targetActor
    if targetActors == nil then
        return
    end
    local len = targetActors:Length()
    local targetLocation
    for iter = 1, len do
        targetActor = targetActors:GetRef(iter)
        if targetActor ~= nil then
            targetLocation = targetActor:K2_GetActorLocation()
        end
    end
    if targetLocation ~= nil then
        --local world = self:GetWorld()
        --local randomLocation = UE4.FVector()
        --if world then
        --    local useRandomLocation = UE4.UNavigationSystemV1.K2_GetRandomLocationInNavigableRadius(world, targetLocation, randomLocation, self.AreaRadius, nil, nil)
        --    if useRandomLocation then
        --        Log("AdjustedActorPosition useRandomLocation ", randomLocation)
        --    end
        --else
        --    randomLocation = targetLocation
        --end
        --targetLocation.Z = targetLocation.Z + 50
        --randomLocation.Z = randomLocation.Z + 50
        --local success, pos = SPGameplayUtils:AdjustedActorPosition(ownerActor, randomLocation)
        --if success then
        --    Log("AdjustedActorPosition, pos: ", pos)
        --else
        --    Log("AdjustedActorPosition failed ", targetLocation)
        --    ownerActor:K2_SetActorLocation(targetLocation)
        --end
        targetLocation.Z = targetLocation.Z + 50
        Log("AdjustedActorPosition ", targetLocation)


        -- 如果是星兽判断是否在navmesh上
        if ownerActor:Cast(UE4.ASPGameMonsterBase) then
            local World = _SP.GetCurrentWorld()
            local projectionExtent = UE4.FVector(self.boundExtent.X, self.boundExtent.Y, self.boundExtent.Z)
            local projectedLocation = UE4.FVector()
            local bIsOnNavmesh = UE4.USPUtilityLibrary.ProjectPointToNavigation(World, targetLocation, projectedLocation,nil,nil, projectionExtent, ownerActor)
            if not bIsOnNavmesh and targetActor then
                local comp = targetActor:GetComponentByClass(UE4.USPCaptureComponent.StaticClass())
                if comp then
                    -- 先隐藏
                    ownerActor:SetMonsterIsInWorld(false)
                    comp:ForceDoLeashSafelyInDS_Lua(true,"AdjustPosition") --回收精灵
                end
            end
        end

        ownerActor:K2_SetActorLocation(targetLocation)
    end
end

return Ability_Task_AdjustedPosition