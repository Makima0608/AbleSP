---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Sakuragong.
--- DateTime: 2024/5/27 11:30
---
local Ability_Task_HideMesh = UE4.Class(nil, "Ability_Task_HideMesh")

function Ability_Task_HideMesh:OnTaskStartBP(Context)
    local ScratchPad = self:GetScratchPad(Context)
    if not ScratchPad then
        return
    end

    --调用隐藏函数
    local HiddenActor = Context:GetOwner()
    local Type = self.HideType
    local SpecName = self.SpecName
    HiddenActor:HideMesh(Type, SpecName)
    if self.HideStaticMesh then
        local Mesh = HiddenActor:GetComponentByClass(UE4.UStaticMeshComponent:StaticClass())
        if Mesh then
            Mesh:SetVisibility(false)
        end
    end
    print("HideMeshSuccess")
end

function Ability_Task_HideMesh:OnTaskEndBP(Context)
    --调用复原函数
    local HiddenActor = Context:GetOwner()
    local Recover = 2
    local SpecName = self.SpecName
    HiddenActor:HideMesh(Recover, SpecName)
    if self.HideStaticMesh then
        local Mesh = HiddenActor:GetComponentByClass(UE4.UStaticMeshComponent:StaticClass())
        if Mesh then
            Mesh:SetVisibility(true)
        end
    end
    print("RecoverMeshSuccess")
end

function Ability_Task_HideMesh:IsSingleFrameBP()
    return self.SingleFrame
end
return Ability_Task_HideMesh