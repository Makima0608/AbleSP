---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by bladeyuan.
--- DateTime: 2024/4/26 15:13
---
local SPAbility = require("Feature.StarP.Script.System.Ability.SPAbilityClasses")
local SPAbilityUtils = require("Feature.StarP.Script.System.Ability.SPAbilityUtils")
local Ability_Task_PVPPlayOutLineEffect = UE4.Class(nil, "Ability_Task_PVPPlayOutLineEffect")

function Ability_Task_PVPPlayOutLineEffect:OnTaskStartBP(Context)
    -- Get ScratchPad
    local ScratchPad = self:GetScratchPad(Context)
    if ScratchPad then
        ScratchPad.LogText = self.LogText
        print("Ability_Task_PVPPlayOutLineEffect:OnTaskStartBP !!!", self.LogText)
    end
    local Owner = Context:GetOwner()
    if Owner then
        local actorMesh = Owner:GetComponentByClass(UE4.USkeletalMeshComponent:StaticClass())
        if actorMesh == nil or not actorMesh:IsA(UE4.USkeletalMeshComponent.StaticClass()) then
            return
        end

        local previewMaterial;
        local selfActor = Context:GetSelfActor()
        if _SP.IsValid(selfActor) and selfActor.GetMonsterTypeConfig then
            local MonsterTypeConfig = selfActor:GetMonsterTypeConfig()
            if not MonsterTypeConfig then
                return
            end
            local elementType = MonsterTypeConfig.elements[1]
            if  not elementType then
                return
            end
            local elementConfig = _SPFeature.StaticConfigManager:GetConfig("SPPetElementDetail").rows
            if not elementConfig[1] then
                return
            end
            if self.HaveOutLine then
                local elementId = _SPFeature.ServerEnum.SPPetElementType[elementType]
                local  configMaterial = elementConfig[elementId] and elementConfig[elementId].outlinematerial or nil
                previewMaterial = UE4.UMaterial.Load(configMaterial)
                local MaterialInstance = UE4.UKismetMaterialLibrary.CreateDynamicMaterialInstance(_SP.GetCurrentWorld(), previewMaterial)
                actorMesh:SetOverlayMaterial(MaterialInstance)
            else
                actorMesh:SetOverlayMaterial(nil)
            end
        end
    end
end

function Ability_Task_PVPPlayOutLineEffect:OnTaskEndBP(Context)
    local ScratchPad = self:GetScratchPad(Context)
    if ScratchPad then
        print("Ability_Task_PVPPlayOutLineEffect:OnTaskEndBP !!!", ScratchPad.LogText)
    end
end

function Ability_Task_PVPPlayOutLineEffect:GetTaskScratchPadClassBP(Context)
    return SPAbilityUtils.LoadScratchPadClass(SPAbility.ScratchPadClass.TemplatePad)
end

return Ability_Task_PVPPlayOutLineEffect