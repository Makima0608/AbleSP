---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by brendanwang.
--- DateTime: 2025/2/17 17:06
---

---@class Ability_Task_SetWeaponTargetActor    设置武器目标
local Ability_Task_SetWeaponTargetActor = UE4.Class(nil, "Ability_Task_SetWeaponTargetActor")
local TargetType = UE4.EAbleAbilityTargetType.ATT_TargetActor

function Ability_Task_SetWeaponTargetActor:OnTaskStartBP(Context)
    _SP.Log("SPAbility","Ability_Task_SetWeaponTargetActor:OnTaskStartBP")
    if not self:IsLocalCharacter(Context) then
        return
    end

    local ScratchPad = self:GetScratchPad(Context)
    if not ScratchPad then
        return
    end

    local crtWeapon = self:GetCrtEquipWeapon(Context)
    if not _SP.IsValid(crtWeapon) then
        return
    end

    ScratchPad.CurrentWeapon = crtWeapon
    ScratchPad.CurrentTime = os.clock()

    local targetActor = self:GetSingleActorFromTargetTypeBP(Context, TargetType)
    if crtWeapon.SetAutoTargetCharacter then
        crtWeapon:SetAutoTargetCharacter(targetActor)
    end
end

function Ability_Task_SetWeaponTargetActor:OnTaskTickBP(Context, DeltaTime)
    if not self.bEnableTick then
       return
    end

    if not self:IsLocalCharacter(Context) then
        return
    end

    local ScratchPad = self:GetScratchPad(Context)
    if not ScratchPad then
        return
    end

    local weapon = self:GetCrtEquipWeapon(Context)
    if not _SP.IsValid(weapon) then
        ScratchPad.CurrentWeapon = nil
        return
    end

    local LastTime = ScratchPad.CurrentTime or 0
    local CurrentTime = os.clock()
    local Interval = CurrentTime - LastTime
    if Interval >= self.UpdateInterval then
        -- 大于更新间隔，重新设置目标
        local targetActor = self:GetSingleActorFromTargetTypeBP(Context, TargetType)
        if weapon.SetAutoTargetCharacter then
            weapon:SetAutoTargetCharacter(targetActor)
        end
        ScratchPad.CurrentTime = CurrentTime
    end
end

function Ability_Task_SetWeaponTargetActor:OnTaskEndBP(Context, Result)
    _SP.Log("SPAbility","Ability_Task_SetWeaponTargetActor:OnTaskEndBP")
    if not self:IsLocalCharacter(Context) then
        return
    end

    local ScratchPad = self:GetScratchPad(Context)
    if not ScratchPad then
        return
    end

    if self.bResetOnEnd then
        local weapon = ScratchPad.CurrentWeapon
        if _SP.IsValid(weapon) then
            if weapon.SetAutoTargetCharacter then
                weapon:SetAutoTargetCharacter(nil)
            end
        end
    end

    ScratchPad.CurrentWeapon = nil
    ScratchPad.CurrentTime = nil
end

function Ability_Task_SetWeaponTargetActor:IsLocalCharacter(Context)
    if _SPFeature.Utils.WorldUtils:IsStandalone() then
        return true
    end
    local Character = Context:GetOwner()
    if Character then
        return Character:IsLocallyControlled()
    end
    return false
end

function Ability_Task_SetWeaponTargetActor:GetCrtEquipWeapon(Context)
    local ScratchPad = self:GetScratchPad(Context)
    if not ScratchPad then
        return nil
    end

    if _SP.IsValid(ScratchPad.CurrentWeapon) then
        return ScratchPad.CurrentWeapon
    end

    local character = Context:GetOwner()
    if not _SP.IsValid(character) then
        return nil
    end

    if not character:IsA(UE4.ASPGameCharacterBase) then
        return nil
    end

    local crtWeapon = character:GetCrtEquipWeapon()
    if not _SP.IsValid(crtWeapon) then
        return nil
    end

    ScratchPad.CurrentWeapon = crtWeapon
    return crtWeapon
end

return Ability_Task_SetWeaponTargetActor