---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by byteyang.
--- DateTime: 2024/6/18 上午11:37
---

local PetInteractDefine = require("Feature.StarP.Script.System.Character.Define.PetInteractDefine")
local SPPetInteractionUtils = require("Feature.StarP.Script.System.Comp.PetInteraction.SPPetInteractionUtils")

local MonsterStatus = PetInteractDefine.MonsterStatus
local EAbleAbilityTaskResult = UE4.EAbleAbilityTaskResult

local Log = function(...)
    _SP.Log("Ability_Task_LiftPal", ...)
end

local Warning = function(...)
    _SP.LogWarning("Ability_Task_LiftPal", ...)
end

---@class Ability_Task_LiftPal : USPAbilityTask
local Ability_Task_LiftPal = UE4.Class(nil, "Ability_Task_LiftPal")

---OnTaskStartBP
---@param Context UAbleAbilityContext
function Ability_Task_LiftPal:OnTaskStartBP(Context)
    Log("OnTaskStartBP")

    ---@type SPGameCharacter
    local Player = Context:GetOwner()
    if not Player then
        Warning("Player is nil")
        return
    end

    local SPPetInteractComponent = Player:GetPetInteractComponent()
    if not SPPetInteractComponent then
        Warning("SPPetInteractComponent is nil")
        return
    end

    SPPetInteractComponent:SetGrip_DS(true)

    local MonsterUID = SPPetInteractComponent:GetMonsterUID()

    _SP.EventManager:DispatchEvent(_SP.EventEnum.ON_SPGAME_DS_LIFT_PET, Player:GetUID(), MonsterUID)

    ---@type SPGameMonsterManager
    local MonsterManager
    if _SP.IsDSorStandalone then
        MonsterManager = _SP.DS.MonsterManager
    else
        MonsterManager = _SP.Client.MonsterManager
    end

    local Monster = MonsterManager:GetActiveMonster(MonsterUID)
    if Monster then
        Monster:SetInteractStatus(MonsterStatus.Lift_Begin)
    end
end

function Ability_Task_LiftPal:OnTaskEndBP(Context, result)
    Log("OnTaskEndBP", result)

    ---@type SPGameCharacter
    local Player = Context:GetOwner()
    if not Player then
        Warning("Player is nil")
        return
    end

    local SPPetInteractComponent = Player:GetPetInteractComponent()
    if not SPPetInteractComponent then
        Warning("SPPetInteractComponent is nil")
        return
    end

    local HandSocketLocation = Player.Mesh:GetSocketLocation(self.SlotName)
    local SocketTransform = Player.Mesh:GetSocketTransform(self.SlotName)

    local MonsterUID = SPPetInteractComponent:GetMonsterUID()

    ---@type SPGameMonsterManager
    local MonsterManager
    if _SP.IsDSorStandalone then
        MonsterManager = _SP.DS.MonsterManager
    else
        MonsterManager = _SP.Client.MonsterManager
    end

    ---@type SPGameMonsterBase
    local Monster = MonsterManager:GetActiveMonster(MonsterUID)
    if Monster then
        Monster:SetInteractStatus(MonsterStatus.Lift_End)
        ---@type USPCharacterMovementComponent
        local CharacterMovement = Monster.CharacterMovement
        if CharacterMovement then
            if result == EAbleAbilityTaskResult.Successful then

                local BeforeLocation = Monster:K2_GetActorLocation()
                local RootLocation =  Monster.Mesh:GetSocketLocation("Root")

                local TargetLocation = HandSocketLocation + BeforeLocation - RootLocation
                local Distance = UE4.UKismetMathLibrary.Vector_Distance(TargetLocation, BeforeLocation)

                if Distance > 5 then
                    BeforeLocation = TargetLocation
                end

                --- DS取预测终点位置, 1P取本地动画表现的位置
                local RelativeLocation = SPPetInteractionUtils.CalculateGrippedOffset(Player,Monster)
                if Player:IsLocallyControlled() then
                    RelativeLocation = UE4.UKismetMathLibrary.InverseTransformLocation(SocketTransform, BeforeLocation)
                end

                SPPetInteractionUtils.DoAttachPal(Player,Monster,self.SlotName,RelativeLocation)

                -- DS架构的技能系统没必要发RPC
                --if _SP.IsClient then
                --    if Player:IsLocallyControlled() then
                --        SPPetInteractComponent:C2S_AttachPal(self.SlotName, RelativeLocation)
                --    end
                --end

            end
        end
    end
end

return Ability_Task_LiftPal